#!/usr/bin/env python
PACKAGE = "stair_complete"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# para meaning:
# name type level description default_value min max

gen.add("stair_num",    int_t,    0, "stair_number, int", 2,  1, 10)
gen.add("stair_length", double_t, 0, "stair_length",    0.864)
gen.add("stair_width", double_t, 0, "stair_width",    0.244)
gen.add("stair_height", double_t, 0, "stair_height",    0.126)
gen.add("mesh_resolution", double_t, 0, "stair_height",    0.24)

gen.add("init_x", double_t, 0, "init_x",    -2.3)
gen.add("init_y", double_t, 0, "init_y",    0.8)
gen.add("init_z", double_t, 0, "init_z",    -0.1)
gen.add("init_yaw", double_t, 0, "init_yaw",    0)
gen.add("init_pitch", double_t, 0, "init_pitch",    0)
gen.add("init_roll", double_t, 0, "init_roll",    -155.0)

gen.add("offset_x", double_t, 0, "offset_x",    0.)
gen.add("offset_y", double_t, 0, "offset_y",    0.)
gen.add("offset_z", double_t, 0, "offset_z",    0.)

gen.add("truncation_distance", double_t, 0, "truncation_distance",    0.5, 0, 5)

gen.add("report_grad", bool_t, 0, "report_grad", True);
gen.add("do_optimization", bool_t, 0, "do optimization", True);

# stop_point = gen.enum([ gen.const("init_visualize",      int_t, 0, "init_visualize"),
#                     gen.const("gradient_check",     int_t, 1, "init_visualize"),
#                     gen.const("gradient_filter",     int_t, 2, "filter gradients"),
#                     gen.const("manually_calculation",      int_t, 3, "manually"),
#                     gen.const("ceres", int_t, 4, "An extra large constant"),
#                     gen.const("nonthing", int_t, 15, "nothing is done")], "An enum to set size");


gen.add("m_opt_loop_n",    int_t,    0, "max steps iteration for optimization", 500, 0);

point_generation = gen.enum([gen.const("basic_version",      int_t, 0, "old version"),
                            gen.const("vertical_penalize",      int_t, 1, "vertical_penalize"),
                            gen.const("keep_edge",      int_t, 2, "keep edge")], "point generate method");

gen.add("point_generation", int_t, 2, "point_generation methods", 0, 0, 3, edit_method=point_generation);

gen.add("enable_node", bool_t, 0, "enable_node", False);

exit(gen.generate(PACKAGE, "offline_opt_node", "offline_dyn_para"))
